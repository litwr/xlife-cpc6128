mode     equ digifont+7     ;0-stop, 1-run, 2-hide, 3-exit
pseudoc  equ digifont+15
clncnt   equ digifont+23
xdir     equ digifont+31   ;linear transformation
ydir     equ digifont+39
x0       equ digifont+47
y0       equ digifont+55
xchgdir  equ digifont+63
t1       equ digifont+71
zoom     equ digifont+79

hormax   equ 20     ;160
vermax   equ 24     ;192
total    equ hormax*vermax+1
plainbox equ tiles+(hormax*vermax*tilesize)

left     equ 8      ;all directions
ul       equ 10     ;not zero!
up       equ 12
ur       equ 14
right    equ 16
dr       equ 18
down     equ 20
dl       equ 22
next     equ 24
count0   equ 26
count1   equ 30
count2   equ 34
count3   equ 38
count4   equ 42
count5   equ 46
count6   equ 50
count7   equ 54
video    equ 58
sum      equ 60
tile     macro
         db 0  ;l0
         db 0  ;l1
         db 0  ;l2
         db 0  ;l3
         db 0  ;l4
         db 0  ;l5
         db 0  ;l6
         db 0  ;l7
         dw 0  ;left ;+8
         dw 0  ;ul
         dw 0  ;up   ;+12
         dw 0  ;ur
         dw 0  ;right;+16
         dw 0  ;dr
         dw 0  ;down ;+20
         dw 0  ;dl
         dw 0  ;next ;+24
         rept 32
         db 0  ;count;+26
         endm
         dw 0  ;video;+58
         db 0  ;sum  ;+60
         endm
tilesize equ 61

;*cellsum  .macro
cellsum  macro
         local cont2, l1
;*         adc cellcnt+4   ;CY=0
;*         cmp #$3a
;*         bcs l1

;*         sta cellcnt+4
;*         bcc cont2
;*
         ld hl,cellcnt+4
         add a,(hl)
         cp $a
         jr nc,l1

         ld (hl),a
         jr cont2

;*l1       sbc #$a
l1       sub $a
;*         sta cellcnt+4
         ld (hl),a
;*         ldy #$30
         ld c,0
         dec hl
;*         #incbcd cellcnt+3
;*         sty cellcnt+3
         incbcd hl
         dec hl
;*         #incbcd cellcnt+2
;*         sty cellcnt+2
         incbcd hl
         dec hl
;*         #incbcd cellcnt+1
;*         sty cellcnt+1
         incbcd hl
         dec hl
;*         #incbcd cellcnt
;*         sty cellcnt
         incbcd hl
;*cont2
cont2
;*         .endm
         endm

;*incbcd   .segment
;*         inc \1
;*         lda \1
;*         cmp #$3A
;*         bne cont2
;*         .endm
incbcd   macro n
         inc (n)
         ld a,(n)
         cp $a
         jr nz,cont2

         ld (hl),c
         endm

incbcd2  macro
         inc (hl)
         ld a,(hl)
         cp $a
         ret nz

         ld (hl),b
         endm

;*inibcd   .macro
;*         lda #$30
;*         ldx #\2
;*loop0    sta \1,x
;*         dex
;*         bpl loop0
;*         .endm
inibcd   macro addr,n
         local loop
         xor a
         ld b,n+1
         ld hl,addr
loop     ld (hl),a
         inc hl
         djnz loop
         endm

;*setcount .macro
setcount macro n
         ld a,(iy+n)
;*         tax
;*         and #$c0
;*         sta (currp),y
         ld b,a
         and $c0
         ld (hl),a

;*         txa
;*         and #$30
;*         lsr
;*         iny
;*         sta (currp),y
         ld a,b
         and $30
         rrca
         inc hl
         ld (hl),a

;*         txa
;*         and #$c
;*         asl
;*         iny
;*         sta (currp),y
         ld a,b
         and $c
         rlca
         inc hl
         ld (hl),a

;*         txa
;*         and #$3
;*         iny
;*         sta (currp),y
         ld a,b
         and 3
         inc hl
         ld (hl),a
         endm

;*genmac   .macro
genmac   macro n
         local cont2
         ld e,(hl)
         ld a,(de)
         and $c0
         ld c,a

         inc hl
         ld e,(hl)
         ld a,(de)
         and $30
         or c
         ld c,a

         inc hl
         ld e,(hl)
         ld a,(de)
         and $c
         or c
         ld c,a

         inc hl
         ld e,(hl)
         ld a,(de)
         and 3
         or c
         ld (iy+n),a
         ld c,a
         ld a,(bc)
         or a
         jr z,cont2

         ld (iy+sum),a
         ld c,a
         ld a,(mode)
         cp 2
         jr z,cont2

         ld a,c
         push hl
         cellsum
         pop hl
cont2    endm

ispyr4   macro addr
         ld a,4
         add a,addr
         ld addr,a
         endm

ispyr8   macro addr
         ld a,8
         add a,addr
         ld addr,a
         endm

vidmacp  macro   off1,off2    ;in: iy,h,de,c=3; changed: b,l
         ld a,(iy+off1)
         ld b,a
         rlca
         rlca
         and c
         ld l,a
         ld a,(iy+off2)
         rlca
         rlca
         and c
         rlca
         rlca
         or l
         ld l,a
         ld a,(hl)
         ld (de),a

         inc e
         ld a,b
         rrca
         rrca
         rrca
         rrca
         and c
         ld l,a
         ld a,(iy+off2+1)
         rrca
         and $c
         or l
         ld l,a
         ld a,(hl)
         ld (de),a

         inc e
         ld a,b
         rrca
         rrca
         and c
         ld l,a
         ld a,(iy+off2+2)
         rrca
         and $c
         or l
         ld l,a
         ld a,(hl)
         ld (de),a

         inc e
         ld a,b
         and c
         ld l,a
         ld a,(iy+off2+3)
         and c
         rlca
         rlca
         or l
         ld l,a
         ld a,(hl)
         ld (de),a
         endm

vidmacpa macro
         dec e
         dec e
         dec e
         ld a,d
         add a,8
         ld d,a
         endm

vidmac   macro       ;in: hl, de, c=$c0; changed: b
         ld a,(hl)
         and c
         ld (de),a
         ld a,(hl)
         rlca
         rlca
         ld b,a
         inc e
         and c
         ld (de),a
         ld a,b
         rlca
         rlca
         inc e
         and c
         ld (de),a
         ld a,(hl)
         rrca
         rrca
         inc e
         and c
         ld (de),a
         endm

vidmaca  macro
         inc hl
         vidmacpa
         endm

nexthld  macro data,opt
         ld (hl),data
         ld a,h
         add a,opt
         ld h,a
         dec l
         endm

nexthll  macro data
         ld (hl),data
         inc l
         endm

nexthlds macro opt
         ld (hl),a
         ld a,h
         add a,opt
         ld h,a
         dec l
         endm

nexthlls macro
         xor a
         ld (hl),a
         inc l
         endm

nexthlc  macro
         ld a,(hl)
         xor $f
         ld (hl),a
         inc l
         ld a,(hl)
         xor $f
         endm

domac    macro
         ld a,(hl)
         rlca
         rlca
         rlca
         rlca
         and c
         ld (de),a
         ld a,(hl)
         and c
         inc e
         ld (de),a
         endm

